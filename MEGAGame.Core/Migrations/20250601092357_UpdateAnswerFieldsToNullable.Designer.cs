// <auto-generated />
using System;
using MEGAGame.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MEGAGame.Core.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20250601092357_UpdateAnswerFieldsToNullable")]
    partial class UpdateAnswerFieldsToNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MEGAGame.Core.Models.GameSession", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SessionId"));

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PackId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.HasKey("SessionId");

                    b.HasIndex("HostId");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.PlayedPack", b =>
                {
                    b.Property<int>("PlayedPackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PlayedPackId"));

                    b.Property<int>("PackId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlayedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("PlayedPackId");

                    b.HasIndex("PackId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayedPacks");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Answer2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Answer3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CorrectOption")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPlayed")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Option1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Option2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Option3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Option4")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PackId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ThemeId")
                        .HasColumnType("int");

                    b.HasKey("QuestionId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("PackId");

                    b.HasIndex("ThemeId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.QuestionPack", b =>
                {
                    b.Property<int>("PackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PackId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PackId");

                    b.ToTable("QuestionPacks");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.SessionPlayer", b =>
                {
                    b.Property<int>("SessionPlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SessionPlayerId"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("SessionPlayerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SessionId");

                    b.ToTable("SessionPlayers");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.Theme", b =>
                {
                    b.Property<int>("ThemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ThemeId"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PackId")
                        .HasColumnType("int");

                    b.Property<int>("Round")
                        .HasColumnType("int");

                    b.HasKey("ThemeId");

                    b.HasIndex("PackId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.GameSession", b =>
                {
                    b.HasOne("MEGAGame.Core.Models.Player", "Host")
                        .WithMany()
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Host");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.PlayedPack", b =>
                {
                    b.HasOne("MEGAGame.Core.Models.QuestionPack", "Pack")
                        .WithMany()
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MEGAGame.Core.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pack");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.Question", b =>
                {
                    b.HasOne("MEGAGame.Core.Models.Player", "CreatedByPlayer")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MEGAGame.Core.Models.QuestionPack", "Pack")
                        .WithMany("Questions")
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MEGAGame.Core.Models.Theme", "Theme")
                        .WithMany("Questions")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByPlayer");

                    b.Navigation("Pack");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.SessionPlayer", b =>
                {
                    b.HasOne("MEGAGame.Core.Models.Player", "Player")
                        .WithMany("SessionPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MEGAGame.Core.Models.GameSession", "Session")
                        .WithMany("SessionPlayers")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.Theme", b =>
                {
                    b.HasOne("MEGAGame.Core.Models.QuestionPack", "Pack")
                        .WithMany("Themes")
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pack");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.GameSession", b =>
                {
                    b.Navigation("SessionPlayers");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.Player", b =>
                {
                    b.Navigation("SessionPlayers");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.QuestionPack", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Themes");
                });

            modelBuilder.Entity("MEGAGame.Core.Models.Theme", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
